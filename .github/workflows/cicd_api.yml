name: CI/CD API

on:
  push:
    paths:
    - '**.go'
    - 'Makefile'
    - '.github/workflows/cicd_api.yml'
    - 'infra/terraform/modules/service_api'

jobs:
  build:
    name: Tests and build
    runs-on: ubuntu-18.04
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Unit test
      run: make unit-test

    - name: Build
      run: make build-api

    - name: Build docker image
      run: |
        docker build -t ${REGISTRY}:api-${GITHUB_SHA::8} -f build/package/api.Dockerfile .
      env:
        REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

    - name: Push docker image
      if: github.ref == 'refs/heads/master'
      run: |
        docker login -u ${USERNAME} -p ${PASSWORD}
        docker push ${REGISTRY}:api-${GITHUB_SHA::8}
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    needs: [build]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Configure AWS cli
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Install terraform
      uses: little-core-labs/install-terraform@v1
      with:
        version: 0.12.20

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v0.1.0
      with:
        terragrunt_version: 0.21.4

    - uses: actions/checkout@v2
    
    - name: Deploy api ecs-tasks
      working-directory: infra/terragrunt/02_service_api
      run: |
        TF_VAR_DOCKER_IMAGE_VERSION="api-${GITHUB_SHA::8}" terragrunt apply -auto-approve
      env:
        TF_VAR_DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
